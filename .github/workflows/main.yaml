name: Build and test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  package:
    name: Build package
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3.2.0
        with:
          miniconda-version: "latest"
          activate-environment: build-conda-token
          environment-file: etc/build-environment.yml
          python-version: "3.11"
          auto-activate-base: false
      - name: Conda Build
        shell: bash -l {0}
        run: |
          conda build conda.recipe --no-test
          mv $CONDA_PREFIX/conda-bld .
  test:
    name: ${{ matrix.os }}-${{ matrix.conda-version }}-py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        conda-version: ["24.1", "24.3", "24.5", "24.9", "25.1", "25.5", "25.9"]
        exclude:
          - python-version: 3.9
            conda-version: 25.9
          - python-version: 3.13
            conda-version: 24.1
          - python-version: 3.13
            conda-version: 24.3
          - python-version: 3.13
            conda-version: 24.5
          - python-version: 3.13
            conda-version: 24.9
          - python-version: 3.13
            conda-version: 25.1
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Download conda standalone
        shell: bash
        run: |
          if [ $RUNNER_OS == 'Linux' ]; then
            curl https://repo.anaconda.com/pkgs/misc/conda-execs/conda-4.10.3-linux-64.exe -o conda.exe
          elif [ $RUNNER_OS == 'Windows' ]; then
            curl https://repo.anaconda.com/pkgs/misc/conda-execs/conda-4.10.3-win-64.exe -o conda.exe
          elif [ $RUNNER_OS == 'macOS' ]; then
            curl https://repo.anaconda.com/pkgs/misc/conda-execs/conda-4.10.3-osx-arm64.exe -o conda.exe
          fi
          chmod +x conda.exe
          ./conda.exe config --set auto_update_conda false
          ./conda.exe info
      - name: Setup miniconda
        shell: bash
        run: |
          ./conda.exe create -p $HOME/miniconda conda=${{ matrix.conda-version }} python=${{ matrix.python-version }} packaging pytest pytest-cov requests tqdm
      - name: py.test
        env:
          CE_TOKEN: ${{ secrets.CE_TOKEN }}
          PYTHONHASHSEED: 0
        shell: bash
        # run conda --version at both ends, make sure it stays the same (but failed test won't show ending version)
        run: |
          if [ $RUNNER_OS == 'Windows' ]; then
            source $HOME/miniconda/Scripts/activate root && conda info && conda list && py.test -xv && conda --version
          else
            source $HOME/miniconda/bin/activate root && conda info && conda list && py.test -xv && conda --version
          fi
#     - name: Codecov
#       uses: codecov/codecov-action@v1
#       with:
#         file: ./cov.xml
#         env_vars: OS,PYTHON